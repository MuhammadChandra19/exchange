// @generated by protoc-gen-es v2.6.1 with parameter "target=ts,import_extension=none"
// @generated from file core/v1/annotations.proto (package core.v1, syntax proto3)
/* eslint-disable */

import type { GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { FieldOptions, MessageOptions, MethodOptions, ServiceOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file core/v1/annotations.proto.
 */
export const file_core_v1_annotations: GenFile = /*@__PURE__*/
  fileDesc("Chljb3JlL3YxL2Fubm90YXRpb25zLnByb3RvEgdjb3JlLnYxIqgBChFTZXJ2aWNlRGVzY3JpcHRvchIcChRwb3NzaWJsZV9lcnJvcl9jb2RlcxgBIAMoCRIaChJjb21tb25fZXJyb3JfY29kZXMYAiADKAkSLQoOZXJyb3JfZXhhbXBsZXMYAyADKAsyFS5jb3JlLnYxLkVycm9yRXhhbXBsZRIqCg1wYXRoX3ByZWZpeGVzGAQgAygLMhMuY29yZS52MS5QYXRoUHJlZml4IjMKDEVycm9yRXhhbXBsZRIjCgVlcnJvchgBIAEoCzIULmNvcmUudjEuRXJyb3JEZXRhaWwiSwoLRXJyb3JEZXRhaWwSEQoJZ3JwY19jb2RlGAEgASgFEikKB2RldGFpbHMYAiADKAsyGC5jb3JlLnYxLkVycm9yRGV0YWlsSW5mbyI1Cg9FcnJvckRldGFpbEluZm8SIgoGZGV0YWlsGAEgASgLMhIuY29yZS52MS5FcnJvckluZm8iKgoJRXJyb3JJbmZvEg8KB21lc3NhZ2UYASABKAkSDAoEY29kZRgCIAEoCSIaCgpQYXRoUHJlZml4EgwKBHBhdGgYASABKAk6bAoSc2VydmljZV9kZXNjcmlwdG9yEh8uZ29vZ2xlLnByb3RvYnVmLlNlcnZpY2VPcHRpb25zGNGGAyABKAsyGi5jb3JlLnYxLlNlcnZpY2VEZXNjcmlwdG9yUhFzZXJ2aWNlRGVzY3JpcHRvcjpNChFtZXRob2RfZGVzY3JpcHRvchIeLmdvb2dsZS5wcm90b2J1Zi5NZXRob2RPcHRpb25zGNKGAyABKAlSEG1ldGhvZERlc2NyaXB0b3I6UAoSbWVzc2FnZV9kZXNjcmlwdG9yEh8uZ29vZ2xlLnByb3RvYnVmLk1lc3NhZ2VPcHRpb25zGNOGAyABKAlSEW1lc3NhZ2VEZXNjcmlwdG9yOkoKEGZpZWxkX2Rlc2NyaXB0b3ISHS5nb29nbGUucHJvdG9idWYuRmllbGRPcHRpb25zGNSGAyABKAlSD2ZpZWxkRGVzY3JpcHRvckKbAQoLY29tLmNvcmUudjFCEEFubm90YXRpb25zUHJvdG9QAVo9Z2l0aHViLmNvbS9tdWhhbW1hZGNoYW5kcmExOS9leGNoYW5nZS9wcm90by9nby9jb3JlL3YxO2NvcmV2MaICA0NYWKoCB0NvcmUuVjHKAgdDb3JlXFYx4gITQ29yZVxWMVxHUEJNZXRhZGF0YeoCCENvcmU6OlYxYgZwcm90bzM", [file_google_protobuf_descriptor]);

/**
 * Service-level annotations
 *
 * @generated from message core.v1.ServiceDescriptor
 */
export type ServiceDescriptor = Message<"core.v1.ServiceDescriptor"> & {
  /**
   * @generated from field: repeated string possible_error_codes = 1;
   */
  possibleErrorCodes: string[];

  /**
   * @generated from field: repeated string common_error_codes = 2;
   */
  commonErrorCodes: string[];

  /**
   * @generated from field: repeated core.v1.ErrorExample error_examples = 3;
   */
  errorExamples: ErrorExample[];

  /**
   * @generated from field: repeated core.v1.PathPrefix path_prefixes = 4;
   */
  pathPrefixes: PathPrefix[];
};

/**
 * Describes the message core.v1.ServiceDescriptor.
 * Use `create(ServiceDescriptorSchema)` to create a new message.
 */
export const ServiceDescriptorSchema: GenMessage<ServiceDescriptor> = /*@__PURE__*/
  messageDesc(file_core_v1_annotations, 0);

/**
 * @generated from message core.v1.ErrorExample
 */
export type ErrorExample = Message<"core.v1.ErrorExample"> & {
  /**
   * @generated from field: core.v1.ErrorDetail error = 1;
   */
  error?: ErrorDetail;
};

/**
 * Describes the message core.v1.ErrorExample.
 * Use `create(ErrorExampleSchema)` to create a new message.
 */
export const ErrorExampleSchema: GenMessage<ErrorExample> = /*@__PURE__*/
  messageDesc(file_core_v1_annotations, 1);

/**
 * @generated from message core.v1.ErrorDetail
 */
export type ErrorDetail = Message<"core.v1.ErrorDetail"> & {
  /**
   * @generated from field: int32 grpc_code = 1;
   */
  grpcCode: number;

  /**
   * @generated from field: repeated core.v1.ErrorDetailInfo details = 2;
   */
  details: ErrorDetailInfo[];
};

/**
 * Describes the message core.v1.ErrorDetail.
 * Use `create(ErrorDetailSchema)` to create a new message.
 */
export const ErrorDetailSchema: GenMessage<ErrorDetail> = /*@__PURE__*/
  messageDesc(file_core_v1_annotations, 2);

/**
 * @generated from message core.v1.ErrorDetailInfo
 */
export type ErrorDetailInfo = Message<"core.v1.ErrorDetailInfo"> & {
  /**
   * @generated from field: core.v1.ErrorInfo detail = 1;
   */
  detail?: ErrorInfo;
};

/**
 * Describes the message core.v1.ErrorDetailInfo.
 * Use `create(ErrorDetailInfoSchema)` to create a new message.
 */
export const ErrorDetailInfoSchema: GenMessage<ErrorDetailInfo> = /*@__PURE__*/
  messageDesc(file_core_v1_annotations, 3);

/**
 * @generated from message core.v1.ErrorInfo
 */
export type ErrorInfo = Message<"core.v1.ErrorInfo"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: string code = 2;
   */
  code: string;
};

/**
 * Describes the message core.v1.ErrorInfo.
 * Use `create(ErrorInfoSchema)` to create a new message.
 */
export const ErrorInfoSchema: GenMessage<ErrorInfo> = /*@__PURE__*/
  messageDesc(file_core_v1_annotations, 4);

/**
 * @generated from message core.v1.PathPrefix
 */
export type PathPrefix = Message<"core.v1.PathPrefix"> & {
  /**
   * @generated from field: string path = 1;
   */
  path: string;
};

/**
 * Describes the message core.v1.PathPrefix.
 * Use `create(PathPrefixSchema)` to create a new message.
 */
export const PathPrefixSchema: GenMessage<PathPrefix> = /*@__PURE__*/
  messageDesc(file_core_v1_annotations, 5);

/**
 * @generated from extension: core.v1.ServiceDescriptor service_descriptor = 50001;
 */
export const service_descriptor: GenExtension<ServiceOptions, ServiceDescriptor> = /*@__PURE__*/
  extDesc(file_core_v1_annotations, 0);

/**
 * @generated from extension: string method_descriptor = 50002;
 */
export const method_descriptor: GenExtension<MethodOptions, string> = /*@__PURE__*/
  extDesc(file_core_v1_annotations, 1);

/**
 * @generated from extension: string message_descriptor = 50003;
 */
export const message_descriptor: GenExtension<MessageOptions, string> = /*@__PURE__*/
  extDesc(file_core_v1_annotations, 2);

/**
 * @generated from extension: string field_descriptor = 50004;
 */
export const field_descriptor: GenExtension<FieldOptions, string> = /*@__PURE__*/
  extDesc(file_core_v1_annotations, 3);

