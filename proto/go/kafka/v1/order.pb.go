// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kafka/v1/order.proto

package kafkav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaceOrderPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderID,proto3" json:"order_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userID,proto3" json:"user_id,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Bid           bool                   `protobuf:"varint,4,opt,name=bid,proto3" json:"bid,omitempty"`
	Size          float64                `protobuf:"fixed64,5,opt,name=size,proto3" json:"size,omitempty"`
	Price         float64                `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	Offset        int64                  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceOrderPayload) Reset() {
	*x = PlaceOrderPayload{}
	mi := &file_kafka_v1_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceOrderPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderPayload) ProtoMessage() {}

func (x *PlaceOrderPayload) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_v1_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderPayload.ProtoReflect.Descriptor instead.
func (*PlaceOrderPayload) Descriptor() ([]byte, []int) {
	return file_kafka_v1_order_proto_rawDescGZIP(), []int{0}
}

func (x *PlaceOrderPayload) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PlaceOrderPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlaceOrderPayload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PlaceOrderPayload) GetBid() bool {
	if x != nil {
		return x.Bid
	}
	return false
}

func (x *PlaceOrderPayload) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PlaceOrderPayload) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PlaceOrderPayload) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

var File_kafka_v1_order_proto protoreflect.FileDescriptor

const file_kafka_v1_order_proto_rawDesc = "" +
	"\n" +
	"\x14kafka/v1/order.proto\x12\bkafka.v1\"\xaf\x01\n" +
	"\x11PlaceOrderPayload\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderID\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userID\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x10\n" +
	"\x03bid\x18\x04 \x01(\bR\x03bid\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x01R\x04size\x12\x14\n" +
	"\x05price\x18\x06 \x01(\x01R\x05price\x12\x16\n" +
	"\x06offset\x18\a \x01(\x03R\x06offsetB\x9c\x01\n" +
	"\fcom.kafka.v1B\n" +
	"OrderProtoP\x01Z?github.com/muhammadchandra19/exchange/proto/go/kafka/v1;kafkav1\xa2\x02\x03KXX\xaa\x02\bKafka.V1\xca\x02\bKafka\\V1\xe2\x02\x14Kafka\\V1\\GPBMetadata\xea\x02\tKafka::V1b\x06proto3"

var (
	file_kafka_v1_order_proto_rawDescOnce sync.Once
	file_kafka_v1_order_proto_rawDescData []byte
)

func file_kafka_v1_order_proto_rawDescGZIP() []byte {
	file_kafka_v1_order_proto_rawDescOnce.Do(func() {
		file_kafka_v1_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kafka_v1_order_proto_rawDesc), len(file_kafka_v1_order_proto_rawDesc)))
	})
	return file_kafka_v1_order_proto_rawDescData
}

var file_kafka_v1_order_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kafka_v1_order_proto_goTypes = []any{
	(*PlaceOrderPayload)(nil), // 0: kafka.v1.PlaceOrderPayload
}
var file_kafka_v1_order_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kafka_v1_order_proto_init() }
func file_kafka_v1_order_proto_init() {
	if File_kafka_v1_order_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kafka_v1_order_proto_rawDesc), len(file_kafka_v1_order_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kafka_v1_order_proto_goTypes,
		DependencyIndexes: file_kafka_v1_order_proto_depIdxs,
		MessageInfos:      file_kafka_v1_order_proto_msgTypes,
	}.Build()
	File_kafka_v1_order_proto = out.File
	file_kafka_v1_order_proto_goTypes = nil
	file_kafka_v1_order_proto_depIdxs = nil
}
