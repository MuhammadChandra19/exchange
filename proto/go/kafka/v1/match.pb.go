// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kafka/v1/match.proto

package kafkav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchEventPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchID,proto3" json:"match_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Symbol        string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Volume        float64                `protobuf:"fixed64,5,opt,name=volume,proto3" json:"volume,omitempty"`
	BuyOrderId    string                 `protobuf:"bytes,6,opt,name=buy_order_id,json=buyOrderID,proto3" json:"buy_order_id,omitempty"`
	SellOrderId   string                 `protobuf:"bytes,7,opt,name=sell_order_id,json=sellOrderID,proto3" json:"sell_order_id,omitempty"`
	TakerSide     string                 `protobuf:"bytes,8,opt,name=taker_side,json=takerSide,proto3" json:"taker_side,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchEventPayload) Reset() {
	*x = MatchEventPayload{}
	mi := &file_kafka_v1_match_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchEventPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchEventPayload) ProtoMessage() {}

func (x *MatchEventPayload) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_v1_match_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchEventPayload.ProtoReflect.Descriptor instead.
func (*MatchEventPayload) Descriptor() ([]byte, []int) {
	return file_kafka_v1_match_proto_rawDescGZIP(), []int{0}
}

func (x *MatchEventPayload) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchEventPayload) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MatchEventPayload) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MatchEventPayload) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MatchEventPayload) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *MatchEventPayload) GetBuyOrderId() string {
	if x != nil {
		return x.BuyOrderId
	}
	return ""
}

func (x *MatchEventPayload) GetSellOrderId() string {
	if x != nil {
		return x.SellOrderId
	}
	return ""
}

func (x *MatchEventPayload) GetTakerSide() string {
	if x != nil {
		return x.TakerSide
	}
	return ""
}

var File_kafka_v1_match_proto protoreflect.FileDescriptor

const file_kafka_v1_match_proto_rawDesc = "" +
	"\n" +
	"\x14kafka/v1/match.proto\x12\bkafka.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x93\x02\n" +
	"\x11MatchEventPayload\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchID\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12\x16\n" +
	"\x06volume\x18\x05 \x01(\x01R\x06volume\x12 \n" +
	"\fbuy_order_id\x18\x06 \x01(\tR\n" +
	"buyOrderID\x12\"\n" +
	"\rsell_order_id\x18\a \x01(\tR\vsellOrderID\x12\x1d\n" +
	"\n" +
	"taker_side\x18\b \x01(\tR\ttakerSideB\x9c\x01\n" +
	"\fcom.kafka.v1B\n" +
	"MatchProtoP\x01Z?github.com/muhammadchandra19/exchange/proto/go/kafka/v1;kafkav1\xa2\x02\x03KXX\xaa\x02\bKafka.V1\xca\x02\bKafka\\V1\xe2\x02\x14Kafka\\V1\\GPBMetadata\xea\x02\tKafka::V1b\x06proto3"

var (
	file_kafka_v1_match_proto_rawDescOnce sync.Once
	file_kafka_v1_match_proto_rawDescData []byte
)

func file_kafka_v1_match_proto_rawDescGZIP() []byte {
	file_kafka_v1_match_proto_rawDescOnce.Do(func() {
		file_kafka_v1_match_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kafka_v1_match_proto_rawDesc), len(file_kafka_v1_match_proto_rawDesc)))
	})
	return file_kafka_v1_match_proto_rawDescData
}

var file_kafka_v1_match_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kafka_v1_match_proto_goTypes = []any{
	(*MatchEventPayload)(nil),     // 0: kafka.v1.MatchEventPayload
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_kafka_v1_match_proto_depIdxs = []int32{
	1, // 0: kafka.v1.MatchEventPayload.timestamp:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kafka_v1_match_proto_init() }
func file_kafka_v1_match_proto_init() {
	if File_kafka_v1_match_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kafka_v1_match_proto_rawDesc), len(file_kafka_v1_match_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kafka_v1_match_proto_goTypes,
		DependencyIndexes: file_kafka_v1_match_proto_depIdxs,
		MessageInfos:      file_kafka_v1_match_proto_msgTypes,
	}.Build()
	File_kafka_v1_match_proto = out.File
	file_kafka_v1_match_proto_goTypes = nil
	file_kafka_v1_match_proto_depIdxs = nil
}
