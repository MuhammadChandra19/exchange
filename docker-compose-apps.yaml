version: "3.8"

services:
  # Matching Service Instances for Different Trading Pairs
  eth-btc:
    image: matching-service
    build:
      context: .
      dockerfile: dev/docker/matching-service/Dockerfile
    network_mode: "host"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 60s
    environment:
      - INSTANCE_ID=eth-btc
      - PAIR=ETH/BTC
      - KAFKA_TOPIC=eth_btc_orders
      - KAFKA_GROUP_ID=eth_btc_group
      - PORT=8081
    volumes:
      - .:/app
    depends_on:
      - redis
      - kafka

  eth-usdt:
    image: matching-service
    build:
      context: .
      dockerfile: dev/docker/matching-service/Dockerfile
    network_mode: "host"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 60s
    environment:
      - INSTANCE_ID=eth-usdt
      - PAIR=ETH/USDT
      - KAFKA_TOPIC=eth_usdt_orders
      - KAFKA_GROUP_ID=eth_usdt_group
      - PORT=8082
    volumes:
      - .:/app
    depends_on:
      - redis
      - kafka

  btc-usdt:
    image: matching-service
    build:
      context: .
      dockerfile: dev/docker/matching-service/Dockerfile
    network_mode: "host"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 60s
    environment:
      - INSTANCE_ID=btc-usdt
      - PAIR=BTC/USDT
      - KAFKA_TOPIC=btc_usdt_orders
      - KAFKA_GROUP_ID=btc_usdt_group
      - PORT=8083
    volumes:
      - .:/app
    depends_on:
      - redis
      - kafka

# Note: Since using network_mode: "host", services share the host network
# Make sure each service uses a different PORT environment variable